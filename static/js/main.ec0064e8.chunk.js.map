{"version":3,"sources":["api.js","components/CityButtons/CityButtons.js","index.js","App.js","constants.js"],"names":["url","a","fetch","response","json","getCityData","getData","CityButtons","loadData","currentCityName","className","cx","type","onClick","ReactDOM","render","useState","currentCity","setCity","setCurrentCityName","isLoaded","setIsLoaded","cityName","name","cityData","main","temp","pressure","humidity","wind","speed","deg","href","Math","floor","document","getElementById"],"mappings":"yRAAA,WAAuBA,GAAvB,eAAAC,EAAA,sEACyBC,MAAMF,GAD/B,cACQG,EADR,yBAGSA,EAASC,QAHlB,4C,sBAMO,IAAMC,EAAc,SAACL,GAC1B,O,2CAAOM,CAAQN,I,OCHJO,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OACzB,yBAAKC,UAAU,WACb,4BACEA,UAAWC,EAAG,SACZ,CAAE,kBAAuC,SAApBF,IACvBG,KAAK,SACLC,QAAS,kBAAML,EAAS,UAJ1B,QAQA,4BACEE,UAAWC,EAAG,SACZ,CAAE,kBAAuC,WAApBF,IACvBG,KAAK,SACLC,QAAS,kBAAML,EAAS,YAJ1B,UAQA,4BACEE,UAAWC,EAAG,SACZ,CAAE,kBAAuC,aAApBF,IACvBG,KAAK,SACLC,QAAS,kBAAML,EAAS,cAJ1B,c,MClBJM,IAASC,OAAO,mBCEG,WAAO,IAAD,EACQC,mBAAS,MADjB,mBAChBC,EADgB,KACHC,EADG,OAEuBF,mBAAS,IAFhC,mBAEhBP,EAFgB,KAECU,EAFD,OAGSH,oBAAS,GAHlB,mBAGhBI,EAHgB,KAGNC,EAHM,KAKjBb,EAAQ,uCAAG,WAAMc,GAAN,+BAAArB,EAAA,yDACK,OAAhBgB,GAAwBA,EAAYM,OAASD,EADlC,iEAKQjB,EAAY,GAAD,OCfjB,sDDeiB,OAAeiB,GAAf,OCdhB,4CDSH,OAKTE,EALS,OAQbD,EAGEC,EAHFD,KARa,EAWXC,EAFFC,KAAQC,EATK,EASLA,KAAMC,EATD,EASCA,SAAUC,EATX,EASWA,SATX,EAWXJ,EADFK,KAAQC,EAVK,EAULA,MAAOC,EAVF,EAUEA,IAYjBb,EATgB,CACdK,OACAG,OACAC,WACAC,WACAE,QACAC,QAIFV,GAAY,GACZF,EAAmBG,GAxBJ,4CAAH,sDA2Bd,OACE,yBAAKZ,UAAU,OACb,uBAAGA,UAAU,cAAb,aACA,wBAAIA,UAAU,YACZ,wBAAIA,UAAU,kBACZ,uBAAGA,UAAU,mBAAb,SACA,uBACEA,UAAU,iBACVsB,KAAK,sCAFP,uCAOF,wBAAItB,UAAU,kBACZ,uBAAGA,UAAU,mBAAb,YACA,uBAAGA,UAAU,iBAAb,sCAGJ,wBAAIA,UAAU,mBAAd,OACA,kBAAC,EAAD,CAAaD,gBAAiBA,EAAiBD,SAAUA,IACvDY,EAIE,oCACE,wBAAIV,UAAU,aAAaO,EAAYM,MACvC,wBAAIb,UAAU,WACZ,wBAAIA,UAAU,iBACZ,uBAAGA,UAAU,kBAAb,gBAGA,uBAAGA,UAAU,iBAAb,UACMuB,KAAKC,MAAMjB,EAAYS,KCtElB,QDqEX,YAIF,wBAAIhB,UAAU,iBACZ,uBAAGA,UAAU,kBAAb,yBAGA,uBAAGA,UAAU,iBAAb,UACMO,EAAYU,SADlB,UAIF,wBAAIjB,UAAU,iBACZ,uBAAGA,UAAU,kBAAb,aAGA,uBAAGA,UAAU,iBAAb,UACMO,EAAYW,SADlB,QAIF,wBAAIlB,UAAU,iBACZ,uBAAGA,UAAU,kBAAb,eAGA,uBAAGA,UAAU,iBAAb,UACMO,EAAYa,MADlB,gBAIF,wBAAIpB,UAAU,iBACZ,uBAAGA,UAAU,kBAAb,mBAGA,uBAAGA,UAAU,iBAAb,UACMO,EAAYc,IADlB,aAzCN,MDxDM,MAASI,SAASC,eAAe,U","file":"static/js/main.ec0064e8.chunk.js","sourcesContent":["async function getData(url) {\n  const response = await fetch(url);\n\n  return response.json();\n}\n\nexport const getCityData = (url) => {\n  return getData(url);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as cx from 'classnames';\n\nexport const CityButtons = ({ loadData, currentCityName }) => (\n  <div className=\"buttons\">\n    <button\n      className={cx('button',\n        { 'button--current': currentCityName === 'Kyiv' })}\n      type=\"button\"\n      onClick={() => loadData('Kyiv')}\n    >\n      Kyiv\n    </button>\n    <button\n      className={cx('button',\n        { 'button--current': currentCityName === 'London' })}\n      type=\"button\"\n      onClick={() => loadData('London')}\n    >\n      London\n    </button>\n    <button\n      className={cx('button',\n        { 'button--current': currentCityName === 'New York' })}\n      type=\"button\"\n      onClick={() => loadData('New York')}\n    >\n      New York\n    </button>\n  </div>\n);\n\nCityButtons.propTypes = {\n  loadData: PropTypes.func.isRequired,\n  currentCityName: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { useState } from 'react';\nimport { getCityData } from './api';\nimport { CityButtons } from './components/CityButtons/CityButtons';\nimport { API_ID, URL_BASE, kelvinScale } from './constants';\nimport './App.scss';\n\nexport const App = () => {\n  const [currentCity, setCity] = useState(null);\n  const [currentCityName, setCurrentCityName] = useState('');\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const loadData = async(cityName) => {\n    if (currentCity !== null && currentCity.name === cityName) {\n      return;\n    }\n\n    const cityData = await getCityData(`${URL_BASE}${cityName}${API_ID}`);\n\n    const {\n      name,\n      main: { temp, pressure, humidity },\n      wind: { speed, deg },\n    } = cityData;\n\n    const newCity = {\n      name,\n      temp,\n      pressure,\n      humidity,\n      speed,\n      deg,\n    };\n\n    setCity(newCity);\n    setIsLoaded(true);\n    setCurrentCityName(cityName);\n  };\n\n  return (\n    <div className=\"app\">\n      <p className=\"app__title\">Api info:</p>\n      <ul className=\"api-info\">\n        <li className=\"api-info__item\">\n          <p className=\"api-info__title\">Docs:</p>\n          <a\n            className=\"api-info__link\"\n            href=\"https://openweathermap.org/current\"\n          >\n            https://openweathermap.org/current\n          </a>\n        </li>\n        <li className=\"api-info__item\">\n          <p className=\"api-info__title\">Api key:</p>\n          <p className=\"api-info__key\">c2dcf8ffb5cdc3f8977bfd2ae7ea4738</p>\n        </li>\n      </ul>\n      <h1 className=\"app__main-title\">App</h1>\n      <CityButtons currentCityName={currentCityName} loadData={loadData} />\n      {!isLoaded\n        ? (\n          ''\n        ) : (\n          <>\n            <h2 className=\"city-name\">{currentCity.name}</h2>\n            <ul className=\"whether\">\n              <li className=\"whether__item\">\n                <p className=\"whether__title\">\n                  Temperature:\n                </p>\n                <p className=\"whether__data\">\n                  {`${Math.floor(currentCity.temp - kelvinScale)} °C`}\n                </p>\n              </li>\n              <li className=\"whether__item\">\n                <p className=\"whether__title\">\n                  Atmospheric pressure:\n                </p>\n                <p className=\"whether__data\">\n                  {`${currentCity.pressure} hPa`}\n                </p>\n              </li>\n              <li className=\"whether__item\">\n                <p className=\"whether__title\">\n                  Humidity:\n                </p>\n                <p className=\"whether__data\">\n                  {`${currentCity.humidity} %`}\n                </p>\n              </li>\n              <li className=\"whether__item\">\n                <p className=\"whether__title\">\n                  Wind speed:\n                </p>\n                <p className=\"whether__data\">\n                  {`${currentCity.speed} meter/sec`}\n                </p>\n              </li>\n              <li className=\"whether__item\">\n                <p className=\"whether__title\">\n                  Wind direction:\n                </p>\n                <p className=\"whether__data\">\n                  {`${currentCity.deg} °`}\n                </p>\n              </li>\n            </ul>\n          </>\n        )}\n    </div>\n  );\n};\n","export const kelvinScale = 273.15;\nexport const URL_BASE = `https://api.openweathermap.org/data/2.5/weather?q=`;\nexport const API_ID = '&appid=c2dcf8ffb5cdc3f8977bfd2ae7ea4738';\n"],"sourceRoot":""}